apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-routes
spec:
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: default
  podSelector: {}
  policyTypes:
    - Ingress
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: stool-https-route
spec:
  host: {{ .Values.host }}
  port:
    targetPort: https
  tls:
    termination: passthrough
  to:
    kind: Service
    name: stool
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stool-account
---
apiVersion: authorization.openshift.io/v1
kind: RoleBinding
metadata:
  name: stool-admin-binding
roleRef:
  name: admin
subjects:
  - kind: ServiceAccount
    name: stool-account
---
apiVersion: v1
data:
  ssh_host_rsa_key: {{ .Values.hostkey }}
  ssh_host_rsa_key.pub: {{ .Values.hostkeyPub }}
kind: Secret
metadata:
  name: stool-hostkey
---
apiVersion: v1
binaryData:
  tomcat.p12: {{ .Values.cert }}
kind: ConfigMap
metadata:
  name: stool-cert
---
apiVersion: v1
binaryData:
  cert.sh: {{ .Values.certScript }}
kind: ConfigMap
metadata:
  name: stool-cert-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stool-log-collector
data:
  fluent.conf: |
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>

    <match stage.format>
      @type file
      path /fluentd/log/${stage}/${source_path}
      <buffer stage,source_path>
        @type memory
        flush_mode interval
        flush_interval 10s
      </buffer>
      <format>
        @type single_value
      </format>
      append true
      add_path_suffix false
    </match>
---
apiVersion: v1
kind: Service
metadata:
  name: stool
spec:
  ports:
    - name: https
      port: 443
      targetPort: 8080
    - name: fluentd-tcp
      port: 24224
      protocol: TCP
      targetPort: 24224
    - name: fluentd-udp
      port: 24224
      protocol: UDP
      targetPort: 24224
  selector:
    app: stool
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stool
  labels:
    app: stool
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stool
  template:
    metadata:
      labels:
        app: stool
    spec:
      serviceAccountName: stool-account
      containers:
      - name: stool
        image: {{ .Values.repositoryTag }}
        resources:
          limits:
            cpu: 2
          requests:
            cpu: 200m
        volumeMounts:
          - mountPath: /etc/fault
            name: fault
          - mountPath: /var/log/stages
            name: fluentd-logs
          - mountPath: /usr/local/tomcat/conf/tomcat.p12
            name: cert-volume
            subPath: tomcat.p12
          - mountPath: /var/lib/stool/cert.sh
            name: cert-script-volume
            subPath: cert.sh
        env:
        - name: HOST
          value: {{ .Values.host }}
        - name: API
          value: "{{ .Values.api }}"
        - name: OPTS
          value: "--add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED --illegal-access=deny -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,quiet=n,address=*:5005 -Dserver.ssl.key-store-type=PKCS12 -Dserver.ssl.key-store=/usr/local/tomcat/conf/tomcat.p12 -Dserver.ssl.key-store-password=changeit -Dserver.ssl.key-alias=tomcat -Dsecurity.require-ssl=true"
        - name: ENGINE_LOG
          value: "false"
        - name: VHOSTS
          value: "false"
        - name: LDAP_UNIT
          value: "{{ .Values.ldapUnit }}"
        - name: LDAP_URL
          value: "{{ .Values.ldapUrl }}"
        - name: LDAP_PRINCIPAL
          value: "{{ .Values.ldapPrincipal }}"
        - name: LDAP_CREDENTIALS
          value: "{{ .Values.ldapCredentials }}"
        - name: LDAP_SSO
          value: "{{ .Values.ldapSso }}"
        - name: ADMIN
          value: "michael.hartmeier@ionos.com"
        - name: REGISTRY_URL
          value: "{{ .Values.portus }}"
        - name: LOGLEVEL
          value: "INFO"
      - name: fault-update
        image: {{ .Values.repositoryTag }}
        command: ["sh"]
        args: ["-c", "while true; do sleep 7200; fault '-user=[{{ .Values.faultName }}:/etc/ssh/ssh_host_rsa_key]' auth && fault install -dest=/etc/fault/workspace -permissions=/etc/fault/workspace.permissions -batch @ >/etc/fault/install.log 2>&1; done"]
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 200m
        volumeMounts:
          - mountPath: /etc/fault
            name: fault
          - mountPath: /etc/ssh
            name: hostkey-volume
      - name: collector
        image: fluent/fluentd:v1.11.2-1.0
        volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc
          - name: fluentd-logs
            mountPath: /fluentd/log
      initContainers:
      - name: fault-setup
        image: {{ .Values.repositoryTag }}
        command: ["sh"]
        args: ["-c", "mkdir /etc/fault/workspace && fault '-user=[{{ .Values.faultName }}:/etc/ssh/ssh_host_rsa_key]' auth && fault install -dest=/etc/fault/workspace -permissions=/etc/fault/workspace.permissions -batch @"]
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 200m
        volumeMounts:
          - mountPath: /etc/fault
            name: fault
          - mountPath: /etc/ssh
            name: hostkey-volume
      volumes:
      - name: fault
        emptyDir: {}
      - name: fluentd-config
        configMap:
          name: stool-log-collector
      - name: fluentd-logs
        emptyDir: {}
      - name: hostkey-volume
        secret:
          secretName: stool-hostkey
      - name: cert-volume
        configMap:
          items:
            - key: tomcat.p12
              path: tomcat.p12
          name: stool-cert
      - name: cert-script-volume
        configMap:
          items:
            - key: cert.sh
              path: cert.sh
              mode: 0755
          name: stool-cert-script
