FROM debian:stretch-slim

#ENV String version 9.0.5
#ENV String opts
#ENV Boolean debug false
#ENV Boolean suspend false

# prepare context

RUN echo ${tomcat.download(r"https://archive.apache.org/dist/tomcat/tomcat-${major}/v${version}/bin/apache-tomcat-${version}.tar.gz", version)}
RUN echo ${tomcat.serverXml(version, "STRICT")}


# real docker commands

# internal debian mirrors - avoids proxy problems on pearls/gems
# TODO: move into ciso-tomcat template
RUN echo "deb http://reposrv.loc.lan/repository/debian/debian.org/debian stretch main\ndeb http://debian.reposrv.server.lan/debian-security stretch/updates main\ndeb http://reposrv.loc.lan/repository/debian/debian.org/debian stretch-updates main" > /etc/apt/sources.list; \
	apt-get update

# make sure we get UTF-8 file.encoding
ENV LANG C.UTF-8

ENV JAVA_VERSION 8u151
ENV JAVA_DEBIAN_VERSION 8u151-b12-1~deb9u1
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/jre

RUN set -x; \
	if [ ! -d /usr/share/man/man1 ]; then \
		mkdir -p /usr/share/man/man1; \
	fi; \
	apt-get install -y --no-install-recommends ca-certificates curl wget procps bzip2 unzip xz-utils gpg openjdk-8-jre="$JAVA_DEBIAN_VERSION" && rm -rf /var/lib/apt/lists/*

COPY tomcat /tmp/tomcat
ENV CATALINA_OPTS ${tomcat.catalinaOpts(opts, debug, suspend)}
ENV CATALINA_HOME /usr/local/tomcat
RUN set -x; \
    mkdir $CATALINA_HOME; \
    cd $CATALINA_HOME; \
    tar zxf /tmp/tomcat/tomcat.tar.gz --strip-components=1; \
    rm -rf $CATALINA_HOME/webapps; \
    cp /tmp/tomcat/server.xml $CATALINA_HOME/conf/; \
    cp /tmp/tomcat/ssl/tomcat.jks $CATALINA_HOME/conf/; \
    rm -rf /tmp/tomcat


WORKDIR $CATALINA_HOME

CMD ["bin/catalina.sh", "run"]
