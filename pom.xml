<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.oneandone.maven.poms</groupId>
    <artifactId>lazy-foss-parent</artifactId>
    <version>1.4.2-SNAPSHOT</version>
    <relativePath />
  </parent>

  <groupId>net.oneandone.stool</groupId>
  <artifactId>stool</artifactId>
  <version>6.1.0-SNAPSHOT</version>

  <packaging>jar</packaging>

  <name>Stool</name>
  <url>https://github.com/mlhartme/stool</url>
  <description>Runs multiple web applications in Docker containers.
    Stool is a command line tool that provides a lifecycle for stages:
    create, configure, build, run and remove. A stage contains web applications,
    that may come in different flavors: Maven war projects or artifacts
    (GAV coordinates).
  </description>

  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.org/mlhartme/stool</url>
  </ciManagement>

  <developers>
    <developer>
      <id>mhm</id>
      <name>Michael Hartmeier</name>
      <roles>
        <role>lead</role>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>mabraun</id>
      <name>Maximilian Braun</name>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:ssh://git@github.com/mlhartme/stool.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/mlhartme/stool.git</developerConnection>
    <url>https://github.com/mlhartme/stool</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/mlhartme/stool/issues/</url>
  </issueManagement>

  <distributionManagement>
    <site>
      <id>github</id>
      <name>maven-reports at github</name>
      <url>https://github.com/mlhartme/stool</url>
    </site>
  </distributionManagement>

  <properties>
    <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
    <springboot.version>2.3.4.RELEASE</springboot.version>
    <spring.version>5.2.9.RELEASE</spring.version>
    <spring.security.version>5.3.5.RELEASE</spring.security.version>
  </properties>

  <dependencies>
    <!-- core libs -->
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>sushi</artifactId>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.6</version>
    </dependency>
    <dependency>
      <groupId>org.kamranzafar</groupId>
      <artifactId>jtar</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency><!-- https://java.net/projects/javamail/pages/Home -->
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.6.2</version>
      <exclusions>
        <exclusion><!-- because I have jakarta activation from fabric8 kubernetes -->
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- kubernetes -->
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>openshift-client</artifactId>
      <version>4.10.2</version>
    </dependency>

    <!-- cli -->
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>inline</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.lanterna</groupId>
      <artifactId>lanterna</artifactId>
      <version>3.0.1</version>
    </dependency>

    <!-- spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${springboot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <version>${springboot.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- security -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-ldap</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-cas</artifactId>
      <version>${spring.security.version}</version>
    </dependency>

    <!-- ui -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring5</artifactId>
      <version>3.0.11.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>3.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>4.4.1</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.30</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <!-- tests -->
    <dependency>
      <groupId>net.oneandone.stool</groupId>
      <artifactId>docker</artifactId>
      <version>6.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/filtered-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <rules><dependencyConvergence /></rules>
          <fail>false</fail>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>regex-property</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>image.version</name>
              <value>${project.version}</value>
              <regex>-SNAPSHOT</regex>
              <replacement>-${maven.build.timestamp}</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${springboot.version}</version>
        <configuration>
          <classifier>springboot</classifier>
        </configuration>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://github.com/fabric8io/docker-maven-plugin -->
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.34.1</version>
        <configuration>
          <images>
            <image>
              <name>contargo.server.lan/cisoops-public/stool:${image.version}</name>
              <build>
                <dockerFile>${basedir}/src/docker/Dockerfile</dockerFile>
                <assembly>
                  <descriptor>${basedir}/src/docker/assembly.xml</descriptor>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>deploy-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- helm chart -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/helm</outputDirectory>
              <resources>
                <resource>
                  <directory>src/helm</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.oneandone.maven.plugins</groupId>
        <artifactId>application</artifactId>
        <version>1.7.0-SNAPSHOT</version>
        <executions>
          <execution>
            <id>stool-client</id>
            <configuration>
              <!-- JavaSetup is used as the setup tool *and* as the Jar file for the resulting stool installation. -->
              <path>$PATH</path>
              <options>"-Djava.awt.headless=true --illegal-access=deny"</options>
              <name>sc</name>
              <main>net.oneandone.stool.cli.command.Main</main>
              <equal>META-INF/services/java.security.Provider, org/aopalliance/**/*, META-INF/ASL2.0, javax/annotation/**/*, org/bouncycastle/**/*</equal>
              <remove>META-INF/maven/**/*,
                module-info.class, META-INF/pominfo.properties, META-INF/wsd.properties, META-INF/DEPENDENCIES, META-INF/LICENSE*, META-INF/NOTICE*,
                META-INF/license.txt, META-INF/notice.txt, overview.html, META-INF/DUMMY.SF, META-INF/DUMMY.DSA, about.html,
                readme.txt, changelog.txt, notice.txt, license.txt, licenses/*,
                META-INF/versions/9/module-info.class,
                META-INF/BC*.DSA, META-INF/BC*SF
              </remove>
              <concat>META-INF/services/com.fasterxml.jackson.core.ObjectCodec,
                META-INF/services/com.fasterxml.jackson.core.JsonFactory,
                META-INF/sisu/javax.inject.Named, META-INF/services/org.apache.lucene.codecs.PostingsFormat,
                META-INF/spring.*</concat>
              <overwrite>manifest.vm, ValidationMessages.properties, META-INF/services/com.fasterxml.jackson.databind.Module, schema/*-schema.json,
                META-INF/services/io.fabric8.kubernetes.client.*,
                META-INF/jandex.idx,
                META-INF/services/io.fabric8.kubernetes.api.KubernetesResourceMappingProvider,
                META-INF/versions/9/javax/xml/bind/ModuleUtil.class,
                javax/xml/bind/**/*,
                io/sundr/**/*,
                javax/annotation/Resource$AuthenticationType.class,
                META-INF/services/javax.servlet.ServletContainerInitializer,
                META-INF/spring-autoconfigure-metadata.properties,
                META-INF/web-fragment.xml,
                META-INF/spring-configuration-metadata.json, META-INF/additional-spring-configuration-metadata.json,
                META-INF/services/javax.annotation.processing.Processor
              </overwrite><!-- TODO -->
              <attach>true</attach>
            </configuration>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.oneandone.maven.plugins</groupId>
        <artifactId>active-markdown</artifactId>
        <version>1.0.1</version>
        <configuration>
          <man>true</man>
          <mandir>${project.build.directory}/classes/templates/man/man1</mandir>
        </configuration>
        <executions>
          <execution>
            <goals><goal>run</goal></goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile><!-- if your remote repository needs a special trustStore, StoolIT needs this as well -->
      <activation>
        <property>
          <name>javax.net.ssl.trustStore</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <javax.net.ssl.trustStore>${javax.net.ssl.trustStore}</javax.net.ssl.trustStore>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
