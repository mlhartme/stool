<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.oneandone.stool</groupId>
    <artifactId>stool</artifactId>
    <version>4.0.0-SNAPSHOT</version>
  </parent>

  <name>Stool Main</name>
  <artifactId>main</artifactId>
  <packaging>jar</packaging>
  <description>Stool's main component. Command line tool and Java Library for dashboard.</description>

  <properties>
    <guava.version>19.0</guava.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>sushi</artifactId>
      <version>3.1.6</version>
    </dependency>
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>setenv</artifactId>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>inline</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>net.oneandone.maven</groupId>
      <artifactId>embedded</artifactId>
      <version>3.12.2</version>
    </dependency>

    <dependency><!-- https://java.net/projects/javamail/pages/Home -->
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.5.5</version>
      <exclusions>
        <exclusion><!-- because it's part of Java 7 -->
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.0</version>
    </dependency>

    <!-- override scope because foss-parent set's this to "provided" (needed for http wagon) -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-unixsocket</artifactId>
      <version>0.18</version>
    </dependency>
    <dependency>
      <groupId>org.kamranzafar</groupId>
      <artifactId>jtar</artifactId>
      <version>2.2</version>
    </dependency>

    <!-- test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/filtered-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>net.oneandone.maven.plugins</groupId>
        <artifactId>application</artifactId>
        <version>1.6.2</version>
        <configuration>
          <!-- JavaSetup is used as the setup tool *and* as the Jar file for the resulting stool installation. -->
          <path>$PATH</path>
          <options>-Djava.awt.headless=true</options>
          <name>stool</name>
          <main>net.oneandone.stool.cli.Main</main>
          <equal>com/jcraft/jsch/agentproxy/*.class, org/aopalliance/**/*, META-INF/ASL2.0</equal>
          <remove>META-INF/maven/**/*,
            META-INF/pominfo.properties, META-INF/wsd.properties, META-INF/DEPENDENCIES, META-INF/LICENSE*, META-INF/NOTICE*,
            META-INF/license.txt, META-INF/notice.txt, overview.html, META-INF/DUMMY.SF, META-INF/DUMMY.DSA, about.html,
            readme.txt, changelog.txt, notice.txt, license.txt, licenses/*
          </remove>
          <concat>META-INF/sisu/javax.inject.Named, META-INF/services/org.apache.lucene.codecs.PostingsFormat, META-INF/spring.*</concat>
          <attach>true</attach>
          <shrink>false</shrink>
          <shrinkOptions>
            -dontoptimize # because of proguard bug
            -keepattributes *Annotation*
            -keepdirectories
            -ignorewarnings

            -dontnote com.sun.mail.**
            -dontnote javax.annotation.*
            -dontwarn javax.enterprise.**
            -dontnote javax.enterprise.**
            -dontnote org.apache.maven.**
            -dontwarn org.apache.maven.**
            -dontnote net.oneandone.stool.**
            -dontnote ch.qos.logback.**
            -dontwarn ch.qos.logback.**
            -dontnote org.apache.commons.**
            -dontwarn org.apache.commons.**
            -dontnote org.apache.http.**
            -dontwarn org.apache.http.**
            -dontnote com.google.**
            -dontwarn com.google.**
            -dontnote org.eclipse.**
            -dontwarn org.eclipse.**
            -dontnote org.codehaus.**
            -dontwarn org.codehaus.**
            -dontnote net.oneandone.sushi.**
            -dontwarn net.oneandone.sushi.**

            # inline reflection
            -keep public class net.oneandone.stool.cli.* {
            public *;
            }
            -keep public class net.oneandone.inline.Console {
            public *;
            }
            -keep public class net.oneandone.inline.commands.PackageVersion {
            public *;
            }

            -keep public class org.apache.commons.logging.** {
            *;
            }

            #
            -keep class ** extends javax.mail.Transport {
            public &lt;init&gt;(...);
            }

            -keep public class ** implements org.eclipse.aether.spi.locator.Service {
            }

            -keep @org.codehaus.plexus.component.annotations.Component class *
            -keep @com.google.inject.Singleton class *
            -keep @javax.inject.Named class *

            -keep class org.apache.maven.repository.internal.Default* {
            *;
            }

            -keep class org.eclipse.sisu.** {
            *;
            }

            -keep public class ** implements org.sonatype.plexus.components.sec.dispatcher.SecDispatcher {
            }

            -keep public class ** implements org.sonatype.plexus.components.cipher.PlexusCipher {
            }

            -keepclassmembers class * {
            @javax.inject.Inject *;
            }

            -keepclassmembers enum * {
            public static **[] values();
            public static ** valueOf(java.lang.String);
            }

            -keepclassmembers class ** implements net.oneandone.stool.setup.Upgrade {
            *;
            }

            # Stool
            -keep public class net.oneandone.stool.cli.Main {
            public static void main(java.lang.String[]);
            }
            -keep public class net.oneandone.stool.setup.Debfiles {
            public static void main(java.lang.String[]);
            }
            -keep public class ** implements net.oneandone.stool.extensions.Extension {
            public &lt;init&gt;(...);
            }

            # Sushi
            -keep public class ** extends net.oneandone.sushi.fs.Filesystem {
            public &lt;init&gt;(...);
            }

            -keepclassmembers public class net.oneandone.stool.configuration.StoolConfiguration {
            !static !transient &lt;fields&gt;;
            }
          </shrinkOptions>

          <!-- upload ... -->
          <symlink>${env.CISOTOOLS_HOME}/bin/stool</symlink>
          <target>${env.CISOTOOLS_HOME}/stool</target>
        </configuration>
        <executions>
          <execution>
            <id>stool-application</id>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <configuration>
              <target>
                <!-- main -->
                <property name="cp" refid="maven.runtime.classpath" />
                <java classname="net.oneandone.stool.setup.Debfiles" classpath="${project.build.directory}/stool" fork="false" failonerror="true">
                  <arg path="${project.build.directory}/debfiles" />
                </java>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.oneandone.maven.plugins</groupId>
        <artifactId>active-markdown</artifactId>
        <version>1.0.0</version>
        <configuration>
          <man>true</man>
          <mandir>${project.build.directory}/classes/templates/man/man1</mandir>
        </configuration>
        <executions>
          <execution>
            <goals><goal>run</goal></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>jdeb</artifactId>
        <groupId>org.vafer</groupId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>jdeb</id>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <configuration>
              <name>stool</name>
              <snapshotExpand>true</snapshotExpand>
              <deb>${basedir}/target/stool_[[version]]_all.deb</deb>
              <compression>bz2</compression>
              <dataSet>
                <data>
                  <type>file</type>
                  <src>${basedir}/target/stool</src>
                  <dst>/usr/bin/stool</dst>
                  <mapper>
                    <type>perm</type>
                    <user>root</user>
                    <group>root</group>
                    <filemode>755</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${project.build.directory}/debfiles</src>
                  <dst>/</dst>
                  <type>directory</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/</prefix>
                    <user>root</user>
                    <group>root</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>
              </dataSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile><!-- if your remote repository needs a special trustStore, StoolIT needs this as well -->
      <activation>
        <property>
          <name>javax.net.ssl.trustStore</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <javax.net.ssl.trustStore>${javax.net.ssl.trustStore}</javax.net.ssl.trustStore>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
